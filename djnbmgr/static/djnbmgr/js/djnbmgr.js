// Generated by IcedCoffeeScript 1.3.1c
(function() {
  var __slice = [].slice;

  window.iced = {
    Deferrals: (function() {

      function _Class(_arg) {
        this.continuation = _arg;
        this.count = 1;
        this.ret = null;
      }

      _Class.prototype._fulfill = function() {
        if (!--this.count) return this.continuation(this.ret);
      };

      _Class.prototype.defer = function(defer_params) {
        var _this = this;
        ++this.count;
        return function() {
          var inner_params, _ref;
          inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          if (defer_params != null) {
            if ((_ref = defer_params.assign_fn) != null) {
              _ref.apply(null, inner_params);
            }
          }
          return _this._fulfill();
        };
      };

      return _Class;

    })(),
    findDeferral: function() {
      return null;
    }
  };
  window.__iced_k = window.__iced_k_noop = function() {};

  window.DjangoNotebookManager = function(el, api_url_base, ipython_server_url) {
    var $, archives, container, notebooks, trash, ___iced_passed_deferral, __iced_deferrals, __iced_k,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    $ = jQuery;
    if (api_url_base[api_url_base.length - 1] !== '/') {
      api_url_base = api_url_base + '/';
    }
    $('.djnbmgr-notebook-link').live('click', function() {
      var nbid;
      nbid = $(this).data('notebook-id');
      return window.open(ipython_server_url + '/' + nbid);
    });
    $('.djnbmgr-notebook-new').live('click', function() {
      return window.open(ipython_server_url + '/new');
    });
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        parent: ___iced_passed_deferral,
        filename: "iced/djnbmgr.iced",
        funcname: "DjangoNotebookManager"
      });
      $.getJSON(api_url_base + 'notebook/?order_by=-updated_on', __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            return notebooks = arguments[0];
          };
        })(),
        lineno: 16
      }));
      $.getJSON(api_url_base + 'archive/?limit=10&order_by=-updated_on', __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            return archives = arguments[0];
          };
        })(),
        lineno: 17
      }));
      $.getJSON(api_url_base + 'trashed/?limit=10&order_by=-updated_on', __iced_deferrals.defer({
        assign_fn: (function() {
          return function() {
            return trash = arguments[0];
          };
        })(),
        lineno: 19
      }));
      __iced_deferrals._fulfill();
    })(function() {
      container = Handlebars.templates.djnbmgr_browse({
        notebooks: notebooks,
        archives: archives,
        trash: trash
      });
      $(el).empty();
      return $(el).append(container);
    });
  };

}).call(this);
